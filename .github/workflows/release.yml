name: Go Releaser
on:
  push:
    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H:%M:%SZ')"
      - name: Get Current Version
        id: version
        run: echo "::set-output name=version::$(echo $GITHUB_REF | cut -d / -f 3)"
      #- name: Build and push Docker image
      #  id: push
      #  uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      #  with:
      #    context: .
      #    target: prod
      #    push: true
      #    tags: ${{ steps.meta.outputs.tags }}
      #    labels: ${{ steps.meta.outputs.labels }}
      #    platforms: linux/amd64,linux/arm64
      #    build-args: |
      #      COMMIT=${{ github.sha }}
      #      VERSION=${{ steps.version.outputs.version }}
      #      DATE=${{ steps.date.outputs.date }}
      #
      #- name: Generate artifact attestation
      #  uses: actions/attest-build-provenance@v1
      #  with:
      #    subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #    subject-digest: ${{ steps.push.outputs.digest }}
      #    push-to-registry: true

  goreleaser:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: '~> v1'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  test-release-script:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        container:
          - {image: "ubuntu:latest", install_cmd: "apt update && apt install -y curl" }
          - {image: "frolvlad/alpine-bash", install_cmd: "apk update && apk add --no-cache curl" }
          - {image: "gentoo/stage3:latest", install_cmd:  "emerge --sync && emerge -av curl" }
          - {image: "fedora:latest", install_cmd:  "dnf install -y curl" }
          - {image: "archlinux:latest", install_cmd:  "pacman -Syu --noconfirm curl" }
          - {image: "opensuse/leap:latest", install_cmd: "zypper install -y curl" }
          - {image: "debian:latest", install_cmd: "apt update && apt install -y curl" }
          - {image: "registry.access.redhat.com/ubi8/ubi:latest", install_cmd:  "dnf install -y curl" }
          - {image: "registry.suse.com/suse/sle15:latest", install_cmd: "zypper install -y curl" }
          - {image: "oraclelinux:9", install_cmd: "dnf install -y curl" }
          - {image: "amazonlinux:latest", install_cmd: "dnf install -y --skip-broken curl tar gzip" }
          - {image: "rockylinux/rockylinux:latest", install_cmd: "dnf install -y curl" }

    container:
      image: ${{ matrix.container.image }}
    
    needs:
      - build-and-push-image
      - goreleaser

    steps: 
      - name: Get Current Version
        id: version
        run: echo "::set-output name=version::$(echo $GITHUB_REF | cut -d / -f 3)"
      - name: Add curl
        run: ${{ matrix.container.install_cmd }}
      - name: Run install script
        run: curl -s -L https://raw.githubusercontent.com/ryanolee/go-pot/refs/tags/${{ steps.version.outputs.version }}/docs/scripts/install.sh | bash -s -- --yes